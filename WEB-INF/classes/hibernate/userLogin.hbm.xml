<?xml version="1.0"?>

<!--
    < Ã€KURA, This application manages the daily activities of a Teacher and a Student of a School>

    Copyright (C) 2012 Virtusa Corporation.
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-->

<!DOCTYPE hibernate-mapping PUBLIC
"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="com.virtusa.akura.api.dto.UserLogin" table="USER_LOGIN" lazy="false">
		<id name="userLoginId" type="int" column="USER_LOGIN_ID">
			<generator class="increment" />
		</id>

		<property name="userRoleId" type="integer" column="USER_ROLE_ID"
			not-null="true" />

		<property name="username" type="string">
			<column name="USERNAME" length="45" not-null="true" />
		</property>
		<property name="password" type="string">
			<column name="PASSWORD" length="100" not-null="true" />
		</property>

		<property name="firstName" type="string">
			<column name="FIRST_NAME" length="45" />
		</property>

		<property name="lastName" type="string">
			<column name="LAST_NAME" length="45" />
		</property>

		<property name="userIdentificationNo" type="string">
			<column name="USER_IDENTIFICATION_NO" length="45" />
		</property>

		<property name="email" type="string">
			<column name="EMAIL" length="45" />
		</property>

		<property name="status" type="boolean">
			<column name="STATUS" not-null="true" />
		</property>

		<property name="generatedPassword" type="boolean" not-null="true">
			<column name="GENERATED_PASSWORD" />
		</property>

		<property name="loginAttempts" type="java.lang.Integer">
			<column name="LOGIN_ATTEMPTS" />
		</property>
		<property name="deleted" type="boolean" not-null="false">
			<column name="DELETED" />
		</property>
		<property name="smsSubscriber" type="boolean" not-null="false">
			<column name="SMS_SUBSCRIBER" />
		</property>
		<property name="mobileSubscriber" type="boolean" not-null="false">
			<column name="MOBILE_SUBSCRIBER" />
		</property>
		<property name="cookieToken" type="string" not-null="false">
			<column name="COOKIE_TOKEN" />
		</property>
		<property name="verificationCode" type="string" not-null="false">
			<column name="VERIFICATION_CODE" />
		</property>
		<property name="verificationSmsCount" type="java.lang.Integer">
			<column name="VERIFICATION_SMS_COUNT" />
		</property>
		<property name="verificationAttempts" type="java.lang.Integer">
			<column name="VERIFICATION_ATTEMPTS" />
		</property>
		<property name="modifiedTime" type="timestamp" column="MODIFIED_TIME" not-null="true"
		generated="always"/>

	</class>

	<query name="searchSystemUser">
			<![CDATA[
			from	com.virtusa.akura.api.dto.UserLogin as userLogin
			where	(? = '' OR userLogin.username like ? )
			]]>
	</query>

	<query name="getUserByName">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where (userLogin.username=? and userLogin.status =1)
  		]]>
	</query>

	<query name="getAnyUserByName">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where (userLogin.username=?)
  		]]>
	</query>

	<query name="searchSystemUserByNameAndRole">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where ((? = '' OR userLogin.username like ? ) and (userLogin.userRoleId = ? or 0=?) and (userLogin.deleted = 0 ))
  		]]>
	</query>

	<query name="getAnyUserByEmail">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where (userLogin.email=?)
  		]]>
	</query>

	<query name="getAnyUserByUserRoleIdAndIdIdentificationNo">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where (userLogin.userRoleId=? and userLogin.userIdentificationNo =?)
  		]]>
	</query>

	<query name="getUserByIdentificationNo">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where (userLogin.userIdentificationNo=? and userLogin.status =1)
  		]]>
	</query>
	
	<query name="getUserLoginListByUserRole">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where userLogin.userRoleId in (:userRoleIdList)
  		]]>
	</query>
	
	<query name="getUsersOfAnyStatusByRegistrationNo">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where userLogin.userIdentificationNo=? 
  		]]>
	</query>

	<query name="getUserLoginByUserRoleIdAndIdentificationNo">
		<![CDATA[
		   from com.virtusa.akura.api.dto.UserLogin as userLogin
		   where (userLogin.userRoleId=? AND userLogin.userIdentificationNo=?)
  		]]>
	</query>
		<sql-query name="getStudentByUserRoleIdAndIdIdentificationNo">
		<![CDATA[
		   SELECT DISTINCT(student_id) from USER_LOGIN AS userLogin
			INNER JOIN STUDENT student
				ON student.admission_no = userLogin.user_Identification_No
		 	WHERE userLogin.user_Role_Id = ? 
		 	AND 
           		userLogin.user_Identification_No = ?
  		]]>
	</sql-query>
	
	<sql-query name="getStaffByUserRoleIdAndIdIdentificationNo">
		<![CDATA[
		   SELECT DISTINCT(staff_id) from USER_LOGIN AS userLogin
			INNER JOIN STAFF staff
				ON staff.registration_no = userLogin.user_Identification_No
		 	WHERE userLogin.user_Role_Id = ? 
		 	AND 
           		userLogin.user_Identification_No = ?
  		]]>
	</sql-query>

	<sql-query name="getParentsByUserRoleIdAndIdIdentificationNo">
	<![CDATA[
		   SELECT DISTINCT(parent_id) from USER_LOGIN AS userLogin
			INNER JOIN PARENT parent
				ON parent.national_id_no = userLogin.user_Identification_No
		 	WHERE userLogin.user_Role_Id = ? 
		 	AND 
           		userLogin.user_Identification_No = ?
  		]]>
	</sql-query>

	<sql-query name="isValidationIdentificationNoForStudent">
	<![CDATA[
		   SELECT student_id from USER_LOGIN AS userLogin
	       RIGHT JOIN STUDENT student
           ON student.student_id = userLogin.user_Identification_No
	       WHERE
           student.admission_no = ?
  		]]>
	</sql-query>
	<sql-query name="isValidationIdentificationNoForStaff">
	<![CDATA[
		   SELECT staff_id from USER_LOGIN AS userLogin
	       RIGHT JOIN STAFF staff
           ON staff.staff_id = userLogin.user_Identification_No
	       WHERE
           staff.registration_no = ?
  		]]>
	</sql-query>
	<sql-query name="isValidationIdentificationNoForParent">
	<![CDATA[
		   SELECT parent_id from USER_LOGIN AS userLogin
	       RIGHT JOIN PARENT parent
           ON parent.parent_id = userLogin.user_Identification_No
	       WHERE
           parent.national_id_no = ?
  		]]>
	</sql-query>

	<sql-query name="isExistingIdentificationNoForStudent">
	<![CDATA[
		   SELECT student_id from USER_LOGIN AS userLogin
	       LEFT JOIN STUDENT student
           ON student.student_id = userLogin.user_Identification_No
	       WHERE userLogin.user_role_id=? and 
           student.admission_no = ?
  		]]>
	</sql-query>
	<sql-query name="isExistingIdentificationNoForStaff">
	<![CDATA[
		   SELECT staff_id from USER_LOGIN AS userLogin
	       LEFT JOIN STAFF staff
           ON staff.staff_id = userLogin.user_Identification_No
	       WHERE userLogin.user_role_id=? and 
           staff.registration_no = ?
  		]]>
	</sql-query>
	<sql-query name="isExistingIdentificationNoForParent" >
	<![CDATA[
		   SELECT parent_id from USER_LOGIN AS userLogin
	       LEFT JOIN PARENT parent
           ON parent.parent_id = userLogin.user_Identification_No
	       WHERE userLogin.user_role_id=? and 
           parent.national_id_no = ?
  		]]>
	</sql-query>
	
	<sql-query name="isPastStaff">
	<![CDATA[
		   SELECT date_of_departure from USER_LOGIN AS userLogin
	       RIGHT JOIN STAFF staff
           ON staff.staff_id = userLogin.user_Identification_No
	       WHERE
           staff.registration_no = ?
  		]]>
	</sql-query>
	
	<sql-query name="getClassTeacherIdList">
		<![CDATA[
		   SELECT class_teacher_id FROM CLASS_TEACHER AS classTeacher
	       INNER JOIN USER_LOGIN userLogin
           ON classTeacher.staff_id = userLogin.user_Identification_No
	       WHERE userLogin.user_role_id= ? 
	       AND userLogin.user_login_id = ? 
           AND classTeacher.year = ?
           AND classTeacher.class_grade_id = ?
  		]]>
	</sql-query>

	<sql-query name="isNonCurrentStudent">
	<![CDATA[
		   SELECT admission_no FROM STUDENT AS student
	        LEFT JOIN 	USER_LOGIN userLogin
            ON 			student.student_id = userLogin.user_Identification_No
	       	WHERE 		student.admission_no = ?
           	AND 		student.student_status_id != 1
  		]]>
	</sql-query>
		
	<sql-query name="getMobileSubscriberStatusByIdentificationNo">
			<![CDATA[
			select MOBILE_SUBSCRIBER from USER_LOGIN
  			where USER_IDENTIFICATION_NO = ?  			
		]]>	
	</sql-query>
	
	<query name="checkUserBrowserCookie">
		<![CDATA[
		   FROM com.virtusa.akura.api.dto.UserLogin as userLogin
		   WHERE userLogin.username = ?
		   AND cookieToken = ?
  		]]>
	</query>
		
	<sql-query name="checkParentMobileNumberExist">
		<![CDATA[
		   SELECT parent.mobile_no from USER_LOGIN AS userLogin
	       LEFT JOIN PARENT parent
           ON parent.parent_id = userLogin.user_Identification_No
	       WHERE userLogin.username=?
	       AND parent.mobile_no IS NOT NULL 
		   AND parent.mobile_no != '';		
		]]>	
	</sql-query>
	
	<sql-query name="getUserByIdentificationNoAndUserRoleID">
		<![CDATA[
		   SELECT * 
		   FROM USER_LOGIN 
		   WHERE USER_LOGIN.USER_IDENTIFICATION_NO = (SELECT STAFF_ID from STAFF where STAFF.REGISTRATION_NO =?);
  		]]>
	</sql-query>
	
	
	<sql-query name="getAnyUserByUserId" cacheable="false">
		
            <![CDATA[
				select * from USER_LOGIN where USER_LOGIN_ID=?;
				   
            ]]>
	</sql-query>
	
	
	<sql-query name="getUserRoleByUserID" cacheable="false">
		
            <![CDATA[
				
				   
            ]]>
	</sql-query>
	
	<sql-query name="getStaffIdByUserLoginID">
		<![CDATA[
		   SELECT userLogin.user_Identification_No 
		   FROM USER_LOGIN userLogin
	       WHERE userLogin.user_role_id= ? 
	       AND userLogin.user_login_id = ? 
	 		]]>
	</sql-query>
	
	<sql-query name="isAcademicStaff">
	<![CDATA[
		SELECT  sct.IS_ACADEMIC
		From STAFF_CATEGORY AS sct join STAFF AS st
		ON sct.STAFF_CATEGORY_ID = st.STAFF_CATEGORY_ID 
		WHERE st.REGISTRATION_NO = ?
	]]>
	</sql-query>
		
</hibernate-mapping>
